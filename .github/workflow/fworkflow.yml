name: Django-app workflow

on: [push]

jobs:
    
    tests:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
  
      - name: Test with flake8
        run: |
          python -m flake8 backend

    build_and_push_to_docker_hub:
      name: Pushing backend image to Docker Hub
      runs-on: ubuntu-latest
      needs:
        - tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: ./backend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
        - name: Push frontend
          uses: docker/build-push-action@v2 
          with:
            context: ./frontend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend

    deploy:
      name: Deploying on remote server
      runs-on: ubuntu-latest
      needs:
        - build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/master'
      steps:
        - name: Copy docker-compose.yml and nginx.conf
          uses: appleboy/scp-action@master
          with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_KEY }}
           passphrase: ${{ secrets.SSH_PASSPHRASE }}
           source: "infra/docker-compose.yml"
           target: "infra"
           source: "infra/nginx.conf"
           target: "infra"
        - name: Executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              cd infra/
              sudo rm .env
              sudo touch .env
              sudo chmod 666 .env

              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env

              sudo docker compose stop
              sudo docker compose rm backend
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend

              sudo docker compose -f docker-compose.yml down
              sudo docker compose -f docker-compose.yml up -d --build
              sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
              sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
              sudo docker compose -f docker-compose.yml exec backend cp -r /app/static/. /backend_static/static/